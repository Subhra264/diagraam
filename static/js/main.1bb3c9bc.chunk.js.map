{"version":3,"sources":["utils/loadShapes.js","components/ComponentList/ComponentList.jsx","components/ComponentMetaEditor/ComponentMetaEditor.jsx","components/DiagramEditor/DiagramEditor.jsx","components/AppWrapper/AppWrapper.jsx","utils/Types.js","assets/icons/ArchitectureIcon.svg","assets/icons/DecisionTreeIcon.svg","components/NavBar/Export/Export.jsx","components/NavBar/NavBar.jsx","App.js","reportWebVitals.js","index.js"],"names":["SHAPE_FILL_COLOR","ComponentSelector","props","componentListRef","useRef","useEffect","editorGraph","editorPaper","shapesContainerRef","componentListGraph","dia","Graph","componentListPaper","Paper","el","current","model","background","color","width","height","interactive","rectangleShape","shapes","standard","Rectangle","position","x","y","size","attrs","body","fill","stroke","rx","ry","label","text","circleShape","Circle","cylinderShape","Cylinder","top","ellipseShape","Ellipse","polygonShape","Polygon","refPoints","headeredRectangleShape","HeaderedRectangle","header","headerText","bodyText","imageShape","Image","image","xlinkHref","embeddedImageShape","EmbeddedImage","inscribedImageShape","InscribedImage","pathShape","Path","refD","addCells","on","cellView","e","bodyElement","document","flyPaperElementDiv","createElement","id","style","append","flyPaperElement","getElementById","flyGraph","flyShape","clone","pos","offset","addCell","bodyMouseMoveHandler","left","pageX","pageY","addEventListener","bodyMouseUpHandler","target","$el","s","resize","removeEventListener","remove","loadShapes","className","ref","ComponentMetaEditor","cellType","cellSize","Object","keys","map","cellSizeField","type","value","onChange","ev","setCellSize","oldCellSize","oldCellSize_","changeCellSize","cellMetaData","cellMetaDataKey","attrKeyField","setCellMetaData","oldCellMetaData","oldCellMetaData_","console","log","changeFieldValue","DiagramEditor","canvas","canvasRef","useState","currentId","setCurrentId","graph","paper","gridSize","drawGrid","name","args","thickness","frozen","snapLinks","linkPinning","defaultLink","Link","async","connectionStrategy","connectionStrategies","pinAbsolute","setEditorGraph","setEditorPaper","verticesLinkTool","linkTools","Vertices","segmentsLinkTool","Segments","removeLinkButton","Remove","linkToolsView","ToolsView","tools","removeElemTool","elementTools","linkgenerationbutton","Button","extend","options","markup","tagName","selector","attributes","r","cursor","rotate","action","evt","elementView","buttonView","link","source","anchor","set","addTo","elemToolsView","resetAll","this","cell","isElement","elemType","split","setCellType","isLink","attr","line","highlighters","mask","add","padding","deep","layer","pointerclick","get","stoke","linkView","removeTools","addTools","linkmodel","getSourceElement","getTargetElement","models","findModelsFromPoint","length","elems","getElements","i","elemView","findViewByModel","links","getLinks","unfreeze","getCell","AppWrapper","ExportType","JSON","PNG","JPEG","DiagramType","_extends","assign","arguments","key","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","d","SvgArchitectureIcon","_ref","svgRef","title","titleId","viewBox","xmlns","ForwardRef","SvgDecisionTreeIcon","Export","showExportMenu","setShowExportMenu","hiddenDownloadButton","editorCanvas","exportAs","exportType","a","outputFileURL","outputJSON","toJSON","outputContent","stringify","outputBlob","Blob","URL","createObjectURL","html2canvas","toDataURL","href","download","click","onClick","NavBar","navBarLeftIcons","icon","diagramType","setDiagramType","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.1bb3c9bc.chunk.js","sourcesContent":["import { dia, shapes } from 'jointjs';\n\nconst SHAPE_FILL_COLOR = '#333337'; //'#1E1B31';\n\nexport default function loadShapes(\n  shapesContainerRef,\n  editorGraph,\n  editorPaper,\n) {\n  const componentListGraph = new dia.Graph();\n  const componentListPaper = new dia.Paper({\n    el: shapesContainerRef.current,\n    model: componentListGraph,\n    background: {\n      color: '#1a253a',\n    },\n    width: '100%',\n    height: 450,\n    interactive: false,\n  });\n\n  const rectangleShape = new shapes.standard.Rectangle({\n    position: { x: 10, y: 10 },\n    size: { width: 75, height: 50 },\n    attrs: {\n      body: {\n        fill: SHAPE_FILL_COLOR,\n        stroke: null,\n        rx: 10,\n        ry: 10,\n      },\n      label: {\n        text: 'Rectangle',\n        fill: 'white',\n      },\n    },\n  });\n\n  const circleShape = new shapes.standard.Circle({\n    position: { x: 110, y: 10 },\n    size: { width: 50, height: 50 },\n    attrs: {\n      body: {\n        fill: SHAPE_FILL_COLOR,\n        stroke: null,\n      },\n      label: {\n        text: 'Circle',\n        fill: 'white',\n      },\n    },\n  });\n\n  const cylinderShape = new shapes.standard.Cylinder({\n    position: { x: 10, y: 75 },\n    size: { width: 75, height: 50 },\n    attrs: {\n      body: {\n        fill: SHAPE_FILL_COLOR,\n        stroke: null,\n      },\n      top: {\n        fill: 'grey',\n      },\n      label: {\n        text: 'Cylinder',\n        fill: 'white',\n      },\n    },\n  });\n\n  const ellipseShape = new shapes.standard.Ellipse({\n    position: { x: 110, y: 75 },\n    size: { width: 75, height: 50 },\n    attrs: {\n      body: {\n        fill: SHAPE_FILL_COLOR,\n        stroke: null,\n      },\n      label: {\n        text: 'Ellipse',\n        fill: 'white',\n      },\n    },\n  });\n\n  const polygonShape = new shapes.standard.Polygon({\n    position: { x: 10, y: 160 },\n    size: { width: 75, height: 50 },\n    attrs: {\n      body: {\n        fill: SHAPE_FILL_COLOR,\n        stroke: null,\n        refPoints: '0,10 10,0 20,10 10,20',\n      },\n      label: {\n        text: 'Polygon',\n        fill: 'white',\n      },\n    },\n  });\n\n  const headeredRectangleShape = new shapes.standard.HeaderedRectangle({\n    position: { x: 110, y: 140 },\n    size: { width: 75, height: 50 },\n    attrs: {\n      header: {\n        fill: 'grey',\n      },\n      headerText: {\n        text: 'Header',\n        fill: 'black',\n      },\n      body: {\n        fill: SHAPE_FILL_COLOR,\n        stroke: null,\n      },\n      bodyText: {\n        text: '',\n      },\n    },\n  });\n\n  const imageShape = new shapes.standard.Image({\n    position: { x: 10, y: 210 },\n    size: { width: 75, height: 50 },\n    attrs: {\n      image: {\n        xlinkHref: '',\n      },\n      body: {\n        fill: SHAPE_FILL_COLOR,\n        stroke: null,\n      },\n      label: {\n        text: 'Image',\n        fill: 'white',\n      },\n    },\n  });\n\n  const embeddedImageShape = new shapes.standard.EmbeddedImage({\n    position: { x: 110, y: 210 },\n    size: { width: 75, height: 50 },\n    attrs: {\n      image: {\n        xlinkHref: '',\n      },\n      body: {\n        fill: SHAPE_FILL_COLOR,\n        stroke: null,\n      },\n      label: {\n        text: 'Embedded Image',\n        fill: 'white',\n      },\n    },\n  });\n\n  const inscribedImageShape = new shapes.standard.InscribedImage({\n    position: { x: 10, y: 290 },\n    size: { width: 75, height: 50 },\n    attrs: {\n      image: {\n        xlinkHref: '',\n      },\n      body: {\n        fill: SHAPE_FILL_COLOR,\n        stroke: null,\n      },\n      label: {\n        text: 'Inscribed Image',\n        fill: 'white',\n      },\n    },\n  });\n\n  const pathShape = new shapes.standard.Path({\n    position: { x: 110, y: 290 },\n    size: { width: 75, height: 50 },\n    attrs: {\n      body: {\n        refD: 'M 0 5 10 0 C 20 0 20 20 10 20 L 0 15 Z',\n        stroke: 'grey',\n        fill: '#00000000',\n      },\n      label: {\n        text: 'Path',\n        fill: 'white',\n      },\n    },\n  });\n\n  componentListGraph.addCells([\n    rectangleShape,\n    circleShape,\n    cylinderShape,\n    ellipseShape,\n    polygonShape,\n    headeredRectangleShape,\n    imageShape,\n    embeddedImageShape,\n    inscribedImageShape,\n    pathShape,\n  ]);\n\n  componentListPaper.on('cell:pointerdown', function (cellView, e, x, y) {\n    const bodyElement = document.body;\n    const flyPaperElementDiv = document.createElement('div');\n    flyPaperElementDiv.id = 'flyPaper';\n    flyPaperElementDiv.style =\n      'position:fixed;z-index:100;opacity:0.7;pointer-event:none;';\n    bodyElement.append(flyPaperElementDiv);\n\n    const flyPaperElement = document.getElementById('flyPaper');\n\n    let flyGraph = new dia.Graph();\n    let flyPaper = new dia.Paper({\n      el: flyPaperElement,\n      model: flyGraph,\n      height: 60,\n      width: 80,\n      background: {\n        color: '#00000000',\n      },\n      interactive: false,\n    });\n\n    let flyShape = cellView.model.clone();\n    let pos = cellView.model.position();\n    let offset = {\n      x: x - pos.x,\n      y: y - pos.y,\n    };\n\n    flyShape.position(0, 0);\n    flyGraph.addCell(flyShape);\n\n    const bodyMouseMoveHandler = (e) => {\n      flyPaperElement.style.left = e.pageX - offset.x + 'px';\n      flyPaperElement.style.top = e.pageY - offset.y + 'px';\n    };\n\n    const bodyMouseUpHandler = (e) => {\n      let x = e.pageX;\n      let y = e.pageY;\n      let target = editorPaper.$el.offset();\n\n      // Dropped over paper ?\n      if (\n        x > target.left &&\n        x < target.left + editorPaper.$el.width() &&\n        y > target.top &&\n        y < target.top + editorPaper.$el.height()\n      ) {\n        let s = flyShape.clone();\n        s.position(x - target.left - offset.x, y - target.top - offset.y);\n        s.resize(120, 80);\n        editorGraph.addCell(s);\n      }\n\n      bodyElement.removeEventListener('mousemove', bodyMouseMoveHandler);\n      bodyElement.removeEventListener('mouseup', bodyMouseUpHandler);\n\n      flyShape.remove();\n      flyPaperElement.remove();\n    };\n\n    bodyMouseMoveHandler(e);\n    bodyElement.addEventListener('mousemove', bodyMouseMoveHandler);\n    bodyElement.addEventListener('mouseup', bodyMouseUpHandler);\n  });\n}\n","import { useRef, useEffect } from 'react';\nimport loadShapes from '../../utils/loadShapes';\nimport './ComponentList.scss';\n\nexport default function ComponentSelector(props) {\n  const componentListRef = useRef(null);\n\n  useEffect(() => {\n    if (props.editorGraph && props.editorPaper) {\n      loadShapes(componentListRef, props.editorGraph, props.editorPaper);\n    }\n  }, [props.editorGraph, props.editorPaper]);\n\n  return (\n    <div className=\"component-selector\">\n      <div className=\"shapes-container\">\n        <div className=\"shapes-type-heading\">Components</div>\n        <div className=\"shapes\" ref={componentListRef}></div>\n      </div>\n    </div>\n  );\n}\n","import './ComponentMetaEditor.scss';\n\nexport default function ComponentMetaEditor(props) {\n  const changeFieldValue = (ev, cellMetaDataKey, attrKeyField) => {\n    props.setCellMetaData((oldCellMetaData) => {\n      let oldCellMetaData_ = { ...oldCellMetaData };\n      console.log('target.cellMetaDataKey', cellMetaDataKey);\n      console.log('target.attrKeyField', attrKeyField);\n      oldCellMetaData_[cellMetaDataKey][attrKeyField] = ev.target.value;\n\n      return oldCellMetaData_;\n    });\n  };\n\n  const changeCellSize = (ev, cellSizeField) => {\n    props.setCellSize((oldCellSize) => {\n      let oldCellSize_ = { ...oldCellSize };\n      oldCellSize_[cellSizeField] = ev.target.value;\n\n      return oldCellSize_;\n    });\n  };\n\n  return (\n    <div className=\"component-meta-editor\">\n      {props.cellType && props.cellType !== 'link' && (\n        <div className=\"container\">\n          {props.cellSize && (\n            <div className=\"cell-attr-group\">\n              <h3>Size</h3>\n              <div className=\"underline\"></div>\n              <div className=\"cell-attr-group-fields\">\n                {Object.keys(props.cellSize).map((cellSizeField) => (\n                  <div className=\"cell-attr-group-fields\">\n                    <div className=\"key-field-name\">{cellSizeField}</div>\n                    <input\n                      type=\"number\"\n                      value={\n                        props.cellSize[cellSizeField]\n                          ? props.cellSize[cellSizeField]\n                          : ''\n                      }\n                      onChange={(ev) => changeCellSize(ev, cellSizeField)}\n                    />\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n          {Object.keys(props.cellMetaData).map((cellMetaDataKey) => (\n            <div className=\"cell-attr-group\" key={cellMetaDataKey}>\n              <h3>{cellMetaDataKey}</h3>\n              <div className=\"underline\"></div>\n              <div className=\"cell-attr-group-fields\">\n                {Object.keys(props.cellMetaData[cellMetaDataKey]).map(\n                  (attrKeyField) => (\n                    <div\n                      className=\"cell-attr-key-field-group\"\n                      key={attrKeyField}\n                    >\n                      {!(\n                        props.cellMetaData[cellMetaDataKey][\n                          attrKeyField\n                        ] instanceof Object\n                      ) && (\n                        <>\n                          <div className=\"key-field-name\">{attrKeyField}</div>\n                          <input\n                            type=\"text\"\n                            value={\n                              props.cellMetaData[cellMetaDataKey][attrKeyField]\n                                ? props.cellMetaData[cellMetaDataKey][\n                                    attrKeyField\n                                  ]\n                                : ''\n                            }\n                            onChange={(ev) =>\n                              changeFieldValue(\n                                ev,\n                                cellMetaDataKey,\n                                attrKeyField,\n                              )\n                            }\n                          />\n                        </>\n                      )}\n                    </div>\n                  ),\n                )}\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n","import React, { useEffect, useRef, useState } from 'react';\nimport 'jointjs/dist/joint.core.css';\nimport {\n  dia,\n  highlighters,\n  linkTools,\n  connectionStrategies,\n  elementTools,\n  shapes,\n} from 'jointjs';\n\nexport default function DiagramEditor(props) {\n  const canvas = props.canvasRef;\n  const [currentId, setCurrentId] = useState(null);\n\n  useEffect(() => {\n    const graph = new dia.Graph();\n    const paper = new dia.Paper({\n      el: canvas.current,\n      model: graph,\n      background: {\n        color: '#1B283F',\n      },\n      width: '100%',\n      height: '100%',\n      gridSize: 30,\n      drawGrid: {\n        name: 'mesh',\n        args: { color: '#2C2E41', thickness: 1 }, // settings for the primary mesh\n      },\n      frozen: true,\n      snapLinks: true,\n      linkPinning: false,\n      defaultLink: new shapes.standard.Link(),\n      async: true,\n      connectionStrategy: connectionStrategies.pinAbsolute,\n    });\n\n    props.setEditorGraph(graph);\n    props.setEditorPaper(paper);\n\n    /******** tools View *********/\n\n    const verticesLinkTool = new linkTools.Vertices();\n    const segmentsLinkTool = new linkTools.Segments();\n    const removeLinkButton = new linkTools.Remove();\n\n    const linkToolsView = new dia.ToolsView({\n      name: 'link-tools',\n      tools: [verticesLinkTool, segmentsLinkTool, removeLinkButton],\n    });\n\n    const removeElemTool = new elementTools.Remove();\n    const LinkGenerateButton = elementTools.Button.extend({\n      name: 'link-generate-button',\n      options: {\n        markup: [\n          {\n            tagName: 'circle',\n            selector: 'button',\n            attributes: {\n              r: 10,\n              fill: '#64A0C1',\n              stroke: 'white',\n              'stroke-width': 1,\n              cursor: 'pointer',\n            },\n          },\n        ],\n        x: '100%',\n        y: '50%',\n        offset: {\n          x: 0,\n          y: 0,\n        },\n        rotate: true,\n        action: function (evt, elementView, buttonView) {\n          let link = new shapes.standard.Link({\n            label: {\n              text: 'link',\n            },\n          });\n          link.source(elementView.model, {\n            anchor: {\n              name: 'modelCenter',\n            },\n          });\n          link.set('target', { x: evt.pageX, y: evt.pageY });\n          link.addTo(paper.model);\n        },\n      },\n    });\n    const linkgenerationbutton = new LinkGenerateButton();\n\n    const elemToolsView = new dia.ToolsView({\n      name: 'element-tools',\n      tools: [removeElemTool, linkgenerationbutton],\n    });\n\n    /************ *************/\n\n    /************** Event Handlers ***************/\n\n    paper.on('cell:pointerclick', function (cellView) {\n      resetAll(this);\n      let cell = cellView.model;\n      console.log(cell);\n\n      setCurrentId(cell.id);\n\n      let cellType = cell.isElement() ? 'element' : 'link';\n      if (cellType === 'element') {\n        props.setCellMetaData(cell.attributes.attrs);\n        props.setCellSize(cell.attributes.size);\n\n        let elemType = cell.attributes.type.split('.')[1];\n        cellType = cellType + '.' + elemType;\n        console.log(elemType, cellType);\n      }\n\n      props.setCellType(cellType);\n      if (cell.isLink()) {\n        cell.attr({\n          line: {\n            stroke: 'orange',\n          },\n        });\n        highlighters.mask.add(\n          cellView,\n          { selector: 'root' },\n          'my-cell-highlight',\n          {\n            padding: 0,\n            deep: true,\n            layer: 'back',\n            attrs: {\n              stroke: null,\n            },\n          },\n        );\n        return;\n      }\n      highlighters.mask.add(\n        cellView,\n        { selector: 'root' },\n        'my-cell-highlight',\n        {\n          padding: 0,\n          deep: true,\n          layer: 'front',\n          attrs: {\n            stroke: 'orange',\n            'stroke-width': 3,\n          },\n        },\n      );\n    });\n\n    paper.on('cell:contextmenu', function (cellView) {\n      cellView.pointerclick();\n    });\n\n    paper.on('cell:mouseover', function (cellView) {\n      if (highlighters.mask.get(cellView, 'my-cell-highlight')) {\n        return;\n      }\n      let cell = cellView.model;\n      if (cell.isLink()) {\n        cell.attr({\n          line: {\n            stroke: 'orange',\n          },\n        });\n        highlighters.mask.add(\n          cellView,\n          { selector: 'root' },\n          'my-hover-highlight',\n          {\n            padding: 0,\n            deep: true,\n            layer: 'back',\n            attrs: {\n              stoke: null,\n            },\n          },\n        );\n        return;\n      }\n      highlighters.mask.add(\n        cellView,\n        { selector: 'root' },\n        'my-hover-highlight',\n        {\n          padding: 0,\n          deep: true,\n          layer: 'front',\n          attrs: {\n            stroke: 'orange',\n            'stroke-width': 3,\n          },\n        },\n      );\n    });\n\n    paper.on('cell:pointerdown', function (cellView) {\n      resetAll(this);\n      let cell = cellView.model;\n      setCurrentId(cell.id);\n\n      let cellType = cell.isElement() ? 'element' : 'link';\n      if (cellType === 'element') {\n        props.setCellMetaData(cell.attributes.attrs);\n        props.setCellSize(cell.attributes.size);\n\n        let elemType = cell.attributes.type.split('.')[1];\n        cellType = cellType + '.' + elemType;\n        console.log(elemType, cellType);\n      }\n\n      props.setCellType(cellType);\n      if (cell.isLink()) {\n        cell.attr({\n          line: {\n            stroke: 'orange',\n          },\n        });\n        highlighters.mask.add(\n          cellView,\n          { selector: 'root' },\n          'my-cell-highlight',\n          {\n            padding: 0,\n            deep: true,\n            layer: 'back',\n            attrs: {\n              stoke: null,\n            },\n          },\n        );\n        return;\n      }\n      highlighters.mask.add(\n        cellView,\n        { selector: 'root' },\n        'my-cell-highlight',\n        {\n          padding: 0,\n          deep: true,\n          layer: 'front',\n          attrs: {\n            stroke: 'orange',\n            'stroke-width': 3,\n          },\n        },\n      );\n    });\n\n    paper.on('cell:mouseout', function (cellView) {\n      highlighters.mask.remove(cellView, 'my-hover-highlight');\n      let cell = cellView.model;\n      if (cell.isLink()) {\n        if (!highlighters.mask.get(cellView, 'my-cell-highlight')) {\n          cell.attr('line/stroke', '#64A0C1');\n        }\n      }\n    });\n\n    paper.on('link:pointerclick', function (linkView) {\n      paper.removeTools();\n      linkView.addTools(linkToolsView);\n    });\n\n    paper.on('link:pointerdown', function (linkView) {\n      this.removeTools();\n      linkView.addTools(linkToolsView);\n    });\n\n    paper.on('link:pointerup', function (linkView, evt, x, y) {\n      let linkmodel = linkView.model;\n      if (linkmodel.getSourceElement() && linkmodel.getTargetElement()) {\n        return;\n      }\n      let models = graph.findModelsFromPoint({ x: x, y: y });\n      if (models.length) {\n        let model = models[0];\n        linkmodel.target(model);\n      }\n    });\n\n    paper.on('element:pointerclick', function (elementView) {\n      this.removeTools();\n      elementView.addTools(elemToolsView);\n    });\n\n    paper.on('element:pointerdown', function (elementView) {\n      this.removeTools();\n      elementView.addTools(elemToolsView);\n    });\n\n    paper.on('blank:pointerclick', function () {\n      resetAll(this);\n      paper.removeTools();\n      props.setCellType(null);\n      setCurrentId(null);\n    });\n    /****************************************/\n\n    const resetAll = (paper) => {\n      let elems = paper.model.getElements();\n      for (let i = 0; i < elems.length; i++) {\n        let elemView = paper.findViewByModel(elems[i]);\n        highlighters.mask.remove(elemView);\n      }\n      let links = paper.model.getLinks();\n      for (let i = 0; i < links.length; i++) {\n        let link = links[i];\n        link.attr('line/stroke', '#64A0C1');\n        let linkView = paper.findViewByModel(link);\n        highlighters.mask.remove(linkView);\n      }\n    };\n\n    paper.unfreeze();\n  }, []);\n\n  useEffect(() => {\n    const graph = props.editorGraph;\n    const paper = props.editorPaper;\n    if (graph && paper) {\n      if (currentId) {\n        let cell = graph.getCell(currentId);\n        if (cell && !cell.isLink()) {\n          cell.attr({\n            ...cell.attributes.attrs,\n            ...props.cellMetaData,\n          });\n\n          cell.resize(props.cellSize.width, props.cellSize.height);\n        }\n      }\n    }\n  }, [\n    props.cellSize,\n    props.cellMetaData,\n    props.editorGraph,\n    props.editorPaper,\n  ]);\n\n  return <div className=\"diagram-editor\" ref={canvas}></div>;\n}\n","import { useState } from 'react';\nimport ComponentSelector from '../ComponentList/ComponentList';\nimport ComponentMetaEditor from '../ComponentMetaEditor/ComponentMetaEditor';\nimport DiagramEditor from '../DiagramEditor/DiagramEditor';\nimport './AppWrapper.scss';\n\nexport default function AppWrapper(props) {\n  const [editorPaper, setEditorPaper] = useState(null);\n  const [cellType, setCellType] = useState(null);\n  const [cellMetaData, setCellMetaData] = useState({});\n  const [cellSize, setCellSize] = useState({});\n\n  return (\n    <div className=\"app-wrapper\">\n      <ComponentSelector\n        editorGraph={props.editorGraph}\n        editorPaper={editorPaper}\n      />\n      <DiagramEditor\n        canvasRef={props.canvasRef}\n        editorGraph={props.editorGraph}\n        setEditorGraph={props.setEditorGraph}\n        editorPaper={editorPaper}\n        setEditorPaper={setEditorPaper}\n        setCellType={setCellType}\n        cellMetaData={cellMetaData}\n        setCellMetaData={setCellMetaData}\n        cellSize={cellSize}\n        setCellSize={setCellSize}\n      />\n      <ComponentMetaEditor\n        cellType={cellType}\n        cellMetaData={cellMetaData}\n        setCellMetaData={setCellMetaData}\n        cellSize={cellSize}\n        setCellSize={setCellSize}\n      />\n    </div>\n  );\n}\n","export const ExportType = {\n  JSON: 'json',\n  // HTML: 'html',\n  PNG: 'png',\n  JPEG: 'jpeg',\n};\n\nexport const DiagramType = {\n  ARCHITECTURE: 'ARCHITECTURE',\n  DECISIONTREE: 'DECISIONTREE',\n};\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M0 32.875L0.479167 37.5L3.58417 34.2917L8.89333 18.4584C7.59 18.1042 6.44 17.3959 5.50083 16.4167L0 32.875ZM16.1192 16.4167C15.18 17.3959 14.0108 18.1042 12.7267 18.4584L18.0358 34.2917L21.1408 37.5L21.6392 32.875L16.1192 16.4167ZM16.445 11.6667C17.02 8.4167 15.295 5.5417 12.7267 4.5417V2.08336C12.7267 0.93753 11.8642 3.05176e-05 10.81 3.05176e-05C9.75583 3.05176e-05 8.89333 0.93753 8.89333 2.08336V4.5417C6.67 5.4167 5.06 7.70836 5.06 10.4167C5.06 14.25 8.24167 17.2917 11.8833 16.5625C14.145 16.1042 16.0042 14.125 16.445 11.6667ZM10.81 12.5C9.75583 12.5 8.89333 11.5625 8.89333 10.4167C8.89333 9.27086 9.75583 8.33336 10.81 8.33336C11.8642 8.33336 12.7267 9.27086 12.7267 10.4167C12.7267 11.5625 11.8642 12.5 10.81 12.5Z\",\n  fill: \"#DDDDDDBF\"\n});\n\nfunction SvgArchitectureIcon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 22,\n    height: 28,\n    viewBox: \"0 0 22 38\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgArchitectureIcon);\nexport default __webpack_public_path__ + \"static/media/ArchitectureIcon.5cd72fdc.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M39.6484 17.3091L35 12.9512V4.01562C35 3.69824 34.8763 3.42358 34.6289 3.19165C34.3815 2.95972 34.0885 2.84375 33.75 2.84375H18.7891C18.0078 2.13574 16.9531 1.56812 15.625 1.14087C14.2969 0.713623 12.8385 0.5 11.25 0.5C8.82812 0.5 6.76432 0.957764 5.05859 1.87329C3.35286 2.78882 2.5 3.89355 2.5 5.1875C2.5 6.35938 3.21615 7.37866 4.64844 8.24536C6.08073 9.11206 7.86458 9.63086 10 9.80176V14.5625H2.5C1.82292 14.5625 1.23698 14.7944 0.742188 15.2583C0.247396 15.7222 0 16.2715 0 16.9062V21.5938C0 22.2529 0.247396 22.8083 0.742188 23.26C1.23698 23.7117 1.82292 23.9375 2.5 23.9375H10V28.6982C7.86458 28.8691 6.08073 29.3879 4.64844 30.2546C3.21615 31.1213 2.5 32.1406 2.5 33.3125C2.5 34.6064 3.35286 35.7112 5.05859 36.6267C6.76432 37.5422 8.82812 38 11.25 38C13.6719 38 15.7357 37.5422 17.4414 36.6267C19.1471 35.7112 20 34.6064 20 33.3125C20 32.1406 19.2839 31.1213 17.8516 30.2546C16.4193 29.3879 14.6354 28.8691 12.5 28.6982V23.9375H20C20.7031 23.9375 21.2956 23.7117 21.7773 23.26C22.2591 22.8083 22.5 22.2529 22.5 21.5938V19.25H28.2031L32.8906 23.6445C33.125 23.8643 33.4049 23.9741 33.7305 23.9741C34.056 23.9741 34.3359 23.8643 34.5703 23.6445L39.6484 18.8838C39.8828 18.6641 40 18.4016 40 18.0964C40 17.7913 39.8828 17.5288 39.6484 17.3091ZM20 14.5625H12.5V9.80176C14.6354 9.63086 16.4193 9.11206 17.8516 8.24536C19.2839 7.37866 20 6.35938 20 5.1875H32.5V12.9146L28.2422 16.9062H22.5C22.5 16.2715 22.2591 15.7222 21.7773 15.2583C21.2956 14.7944 20.7031 14.5625 20 14.5625Z\",\n  fill: \"#DDDDDDBF\"\n});\n\nfunction SvgDecisionTreeIcon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 40,\n    height: 28,\n    viewBox: \"0 0 40 38\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDecisionTreeIcon);\nexport default __webpack_public_path__ + \"static/media/DecisionTreeIcon.bdcc7f11.svg\";\nexport { ForwardRef as ReactComponent };","import { ExportType } from '../../../utils/Types';\nimport { useRef, useState } from 'react';\nimport html2canvas from 'html2canvas';\nimport './Export.scss';\n\nexport default function Export(props) {\n  const [showExportMenu, setShowExportMenu] = useState(false);\n  const hiddenDownloadButton = useRef(null);\n  const editorCanvas = props.canvasRef.current;\n\n  const toggleShowExportMenu = () => {\n    setShowExportMenu((showExportMenu) => !showExportMenu);\n  };\n\n  const exportAs = async (exportType) => {\n    // Code to export diagram\n    if (props.editorGraph && editorCanvas) {\n      console.log('Canvas', editorCanvas);\n      let outputFileURL = '';\n\n      if (exportType == ExportType.JSON) {\n        let outputJSON;\n        let outputContent;\n        outputJSON = props.editorGraph.toJSON();\n        outputContent = JSON.stringify(outputJSON, null, 4); // Default is JSON type\n\n        // TODO: Add some more logic to support differect export types\n\n        const outputBlob = new Blob([outputContent]);\n        outputFileURL = URL.createObjectURL(outputBlob);\n      } else if (\n        exportType == ExportType.PNG ||\n        exportType === ExportType.JPEG\n      ) {\n        const canvas = await html2canvas(editorCanvas);\n        outputFileURL = canvas.toDataURL(`image/${exportType}`);\n      }\n\n      if (outputFileURL) {\n        hiddenDownloadButton.current.href = outputFileURL;\n        hiddenDownloadButton.current.download = 'Diagraam.' + exportType;\n        hiddenDownloadButton.current.click();\n      }\n    }\n  };\n\n  return (\n    <div className=\"export-as-selector\">\n      <a className=\"display-none\" ref={hiddenDownloadButton}></a>\n      <div className=\"export-as-label\" onClick={toggleShowExportMenu}>\n        Export as\n      </div>\n      <div\n        className={\n          'export-select-options' + (!showExportMenu ? ' display-none' : '')\n        }\n      >\n        {Object.keys(ExportType).map((key) => (\n          <div\n            className=\"select-option\"\n            key={key}\n            onClick={() => exportAs(ExportType[key])}\n          >\n            Export as {key}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n","import { DiagramType } from '../../utils/Types';\nimport { ReactComponent as ArchitectureIcon } from '../../assets/icons/ArchitectureIcon.svg';\nimport { ReactComponent as DecisionTreeIcon } from '../../assets/icons/DecisionTreeIcon.svg';\nimport Export from './Export/Export';\nimport './NavBar.scss';\n\nexport default function NavBar(props) {\n  const navBarLeftIcons = [\n    {\n      type: DiagramType.ARCHITECTURE,\n      label: <ArchitectureIcon />,\n      title: 'Architecture Diagram',\n    },\n    {\n      type: DiagramType.DECISIONTREE,\n      label: <DecisionTreeIcon />,\n      title: 'Decision Tree Diagram',\n    },\n  ];\n\n  return (\n    <div className=\"navbar\">\n      <div className=\"left\">\n        <div className=\"icon logo\">D</div>\n        {navBarLeftIcons.map((icon) => (\n          <div\n            className={\n              'icon hoverable' +\n              (icon.type === props.diagramType ? ' active' : '')\n            }\n            title={icon.title}\n            onClick={() => props.setDiagramType(icon.type)}\n            key={icon.title}\n          >\n            {icon.label}\n          </div>\n        ))}\n      </div>\n      <div className=\"middle\">Diagraam</div>\n      <div className=\"right\">\n        <Export editorGraph={props.editorGraph} canvasRef={props.canvasRef} />\n      </div>\n    </div>\n  );\n}\n","import { useState, useRef } from 'react';\nimport './App.scss';\nimport AppWrapper from './components/AppWrapper/AppWrapper';\nimport DiagramEditor from './components/DiagramEditor/DiagramEditor';\nimport NavBar from './components/NavBar/NavBar';\nimport { DiagramType } from './utils/Types';\n\nfunction App() {\n  const [diagramType, setDiagramType] = useState(DiagramType.ARCHITECTURE);\n  const [editorGraph, setEditorGraph] = useState(null);\n  const canvasRef = useRef(null);\n\n  return (\n    <div className=\"App\">\n      <NavBar\n        diagramType={diagramType}\n        setDiagramType={setDiagramType}\n        editorGraph={editorGraph}\n        canvasRef={canvasRef}\n      />\n      <AppWrapper\n        canvasRef={canvasRef}\n        editorGraph={editorGraph}\n        setEditorGraph={setEditorGraph}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}